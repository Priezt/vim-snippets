snippet if "if (condition) { ... }"
if($1){
    $0
}
endsnippet

snippet sub "sub"
sub $1{
    $0
}
endsnippet

snippet opts "Getopt"
use Getopt::Std;
#getopts('ab:c:'); # $opt_a
getopts('$1');
endsnippet

snippet getopt "Getopt"
use Getopt::Std;
#getopts('ab:c:'); # $opt_a
getopts('$1');
endsnippet

snippet binmode "binmode"
binmode $1, ":encoding(utf8)";
endsnippet

snippet datestring "datestring"
use POSIX qw( strftime );
my $date_string = strftime "%Y-%m-%d %H:%M:%S", localtime(time);
endsnippet

snippet yaml "YAML"
use YAML::Tiny;
YAML::Tiny->read("$1")->[0];
endsnippet

snippet usefs "use File::Slurp"
use File::Slurp;
endsnippet

snippet rf "read_file"
read_file($1);
endsnippet

snippet wf "write_file"
write_file($1, $0);
endsnippet

snippet ini "use Config::Tiny to handle .conf"
use Config::Tiny;
$config = Config::Tiny->read($0);
endsnippet

snippet color "Term::ANSIColor"
use Term::ANSIColor;
print colored("$0", "red");
endsnippet

snippet lwp "use LWP::UserAgent"
use HTTP::Request::Common qw(POST GET);
use LWP::UserAgent;
my $ua = LWP::UserAgent->new;
$ua->timeout(20);
# post json
my $req = HTTP::Request->new('POST', "http://127.0.0.1");
$req->header('Content-Type' => 'application/json');
$req->content($json);
# post form
my $req = POST(
	"http://127.0.0.1",
	[
		k1 => 'v1',
		k2 => 'v2',
		file => [
			$filepath,
		],
	],
	'Content_Type' => 'form-data',
);
# response
my $res = $ua->request($req);
if($res->is_error){
	print "Error: (".$res->code.") ".$res->message;
}else{
	print $res->decoded_content();
}
endsnippet
